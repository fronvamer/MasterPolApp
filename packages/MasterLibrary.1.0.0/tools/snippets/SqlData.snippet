<CodeSnippet Format="1.0.0">
  <Header>
    <Title>log</Title>
    <Shortcut>log</Shortcut>
    <Description>Console log</Description>
    <Author>name</Author>
  </Header>
  <Snippet>
    <Declarations>
      <Literal>
        <ID>message</ID>
        <ToolTip>Message to log</ToolTip>
        <Default>message</Default>
      </Literal>
    </Declarations>
    <Code Language="csharp">
		<![CDATA[
		 private void tabControlMain_SelectedIndexChanged(object sender, EventArgs e)
        {

            // Загрузка истории при переходе на вкладку "История"
            if (tabControlMain.SelectedIndex == 1)
            {
                LoadComboBoxHistory();
                LoadHistory(); 
            }

            if (tabControlMain.SelectedIndex == 3)
            {
                LoadComboBoxUpdatePartner();    
            }
            if (tabControlMain.SelectedIndex == 4)
            {
                LoadComboBoxAddSalePartner();
                LoadComboBoxAddSaleProduct();
            }
        }
        private void comboBoxHistory_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBoxHistory.SelectedValue is int selectedPartnerId)
            {
                LoadHistory(selectedPartnerId);
            }
        }
 private void buttonAddPartner_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(textBoxAddPartnerName.Text))
            {
                MessageBox.Show("Введите название партнера");
                return;
            }

            if (!int.TryParse(textBoxAddPartnerRating.Text.Trim(),out int rating))
            {
                MessageBox.Show("Введите корректное число для рейтинга");
                return;
            }

            using (var context = new DbModel())
            {
                var newPartner = new Partners
                {
                    Name = textBoxAddPartnerName.Text,
                    Director = textBoxAddPertnerDirector.Text,  
                    Email = textBoxAddPartnerEmail.Text,    
                    Address = textBoxAddParentAddress.Text, 
                    INN = textBoxAddPartnerINN.Text,
                    Phone = textBoxAddPartnerPhone.Text,    
                    Rating = rating,  

                };

                context.Partners.Add(newPartner);
                context.SaveChanges();

            }
            MessageBox.Show("Партнер успешно добавлен");

            LoadPartners();
        }

        private void LoadComboBoxUpdatePartner()
        {

            using (var context = new DbModel())
            {
                var partners = context.Partners
                    .Select(p => new {p.Id,p.Name })
                    .ToList();
                comboBoxUpdatePartner.DisplayMember = "Name";
                comboBoxUpdatePartner.ValueMember = "Id";
                comboBoxUpdatePartner.DataSource = partners;    
            }
        }
  
        private void comboBoxUpdatePartner_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBoxUpdatePartner.SelectedValue is int selectedPartnerId)
            {
                using (var context = new DbModel())
                {
                    var partner = context.Partners
                        .Include(p => p.PartnerProducts) // ВАЖНО: загрузка связанных данных
                        .FirstOrDefault(p => p.Id == selectedPartnerId);

                    if (partner != null)
                    {
                        textBoxUpdatePartnerName.Text = partner.Name;
                        textBoxUpdatePartnerDirector.Text = partner.Director;
                        textBoxUpdatePartnerEmail.Text = partner.Email;
                        textBoxUpdatePartnerAddress.Text = partner.Address;
                        textBoxUpdatePartnerINN.Text = partner.INN;
                        textBoxUpdatePartnerPhone.Text = partner.Phone;
                        textBoxUpdatePartnerRating.Text = Convert.ToString(partner.Rating);
                    }
                }
            }
        }
 private void buttonUpdatePartner_Click(object sender, EventArgs e)
        {
            if (comboBoxUpdatePartner.SelectedValue is int selectedPartnerId)
            {
                using (var context = new DbModel())
                {
                    var partner = context.Partners
                        .Include(p => p.PartnerProducts) 
                        .FirstOrDefault(p => p.Id == selectedPartnerId);

                    if (partner != null)
                    {
                        partner.Name = textBoxUpdatePartnerName.Text;
                        partner.Director = textBoxUpdatePartnerDirector.Text;
                        partner.Email = textBoxUpdatePartnerEmail.Text;
                        partner.Address = textBoxUpdatePartnerAddress.Text;
                        partner.INN = textBoxUpdatePartnerINN.Text;
                        partner.Phone = textBoxUpdatePartnerPhone.Text;

                        if (int.TryParse(textBoxUpdatePartnerRating.Text, out int rating))
                        {
                            partner.Rating = rating;
                        }
                        else
                        {
                            MessageBox.Show("Введите корректный рейтинг.");
                            return;
                        }

                        context.SaveChanges();
                        MessageBox.Show("Информация о партнёре обновлена.");
                        LoadPartners();
                    }
                }
            }
        }


        private void buttonPartnerEditNavigate_Click(object sender, EventArgs e)
        {
            if (dataGridViewPartners.CurrentRow == null)
            {
                MessageBox.Show("Сначала выберите партнёра для редактирования.", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            int selectedPartnerId = (int)dataGridViewPartners.CurrentRow.Cells["Номер_пп"].Value;

            tabControlMain.SelectedIndex = 3; // Переключаемся на вкладку редактирования

            LoadComboBoxUpdatePartner();

            // Установка выбранного партнёра в comboBox
            comboBoxUpdatePartner.SelectedValue = selectedPartnerId;
        }

	 
]]></Code>
  </Snippet>
</CodeSnippet>
